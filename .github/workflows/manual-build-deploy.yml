name: Fluidity CI/CD (Manual)

on:
  workflow_dispatch:
    inputs:
      network:
        type: choice
        description: 'Network'
        options: 
          - 'solana'
          - 'ethereum'
      group:
        description: 'Group'
        required: true
      service:
        description: 'Service'
        required: true
      environment:
        type: choice
        description: 'Environment'
        options: 
          - 'dev'
      build_base:
        type: boolean
        description: 'Build base image'
        default: false
      skip_build:
        type: boolean
        description: 'Skip docker build'
        default: false
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.FLU_CI_SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.FLU_DEV_AWS_GITHUB_OIDC_ROLE }}
          role-duration-seconds: 7200 #seconds
      - name: Build
        if: ${{ github.event.inputs.skip_build == 'false' }}
        id: build
        uses: ./scripts/actions
        with:
          command: |
            flu build-docker \
              --network ${{ github.event.inputs.network }} \
              --group ${{ github.event.inputs.group }} \
              --service ${{ github.event.inputs.service }} \
              --environment ${{ github.event.inputs.environment }} \
              --tag $GITHUB_SHA \
              --build-common ${{ github.event.inputs.build_base }}
      - name: Deploy
        id: deploy
        uses: ./scripts/actions
        with:
          command: |
            flu deploy-service \
              --network ${{ github.event.inputs.network }} \
              --group ${{ github.event.inputs.group }} \
              --service ${{ github.event.inputs.service }} \
              --environment ${{ github.event.inputs.environment }} \
              --tag $GITHUB_SHA \
              --debug false
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#develop-ci-alerts'
        if: always()


