name: Fluidity CI/CD (Manual)

on:
  workflow_dispatch:
    inputs:
      network:
        type: choice
        description: 'Network'
        options: 
          - 'solana'
          - 'ethereum'
      group:
        description: 'Group'
        required: true
      service:
        description: 'Service'
        required: true
      environment:
        type: choice
        description: 'Environment'
        options: 
          - 'dev'
      commit_id:
        type: string
        description: 'Commit ID'
        default: latest
      build_root_container:
        type: boolean
        description: 'Build root-container'
        default: false
      build_build_container:
        type: boolean
        description: 'Build build-container'
        default: false
      skip_build:
        type: boolean
        description: 'Skip docker build'
        default: false
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.FLU_DEV_AWS_GITHUB_OIDC_ROLE }}
          role-duration-seconds: 7200 #seconds
      - name: Build
        if: ${{ github.event.inputs.skip_build == 'false' }}
        id: build
        uses: ./scripts/actions
        with:
          command: |

            if [[ ${{ github.event.inputs.commit_id }} -eq 'latest' ]]
            then
              $commit_id = $GITHUB_SHA
            else
              $commit_id = ${{ github.event.inputs.commit_id }}
            fi

            flu build-docker \
              --network ${{ github.event.inputs.network }} \
              --group ${{ github.event.inputs.group }} \
              --service ${{ github.event.inputs.service }} \
              --environment ${{ github.event.inputs.environment }} \
              --build-root-container ${{ github.event.inputs.build_root_container }}
              --build-build-container ${{ github.event.inputs.build_build_container }}
              --tag $commit_id
      - name: Deploy
        id: deploy
        uses: ./scripts/actions
        with:
          command: |
            if [[ ${{ github.event.inputs.commit_id }} -eq 'latest' ]]
            then
              $commit_id = $GITHUB_SHA
            else
              $commit_id = ${{ github.event.inputs.commit_id }}
            fi

            flu deploy-service \
              --network ${{ github.event.inputs.network }} \
              --group ${{ github.event.inputs.group }} \
              --service ${{ github.event.inputs.service }} \
              --environment ${{ github.event.inputs.environment }} \
              --debug false \
              --tag $commit_id
      - name: Discord notif (SUCCESS)
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          details: Deployment succeeded.
          webhookUrl: ${{ secrets.FLU_DISCORD_WEBHOOK_URL }}
      - name: Discord notif (SUCCESS)
        if: cancelled()
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: warn
          details: Deployment cancelled.
          webhookUrl: ${{ secrets.FLU_DISCORD_WEBHOOK_URL }}
      - name: Discord notif (SUCCESS)
        if: failure()
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          details: Deployment failed.
          webhookUrl: ${{ secrets.FLU_DISCORD_WEBHOOK_URL }}
