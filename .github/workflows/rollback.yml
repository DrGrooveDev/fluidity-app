name: Rollback (Manual)

on:
  workflow_dispatch:
    inputs:
      rollbackTo:
        type: string
        description: 'The full SHA of the commit'
        required: true
      environment:
        type: choice
        description: 'Environment'
        options:
          - 'mainnet'
      network:
        type: choice
        description: 'Network'
        options: 
          - 'ethereum'
          - 'solana'
          - 'fluidity'
      group:
        description: 'Group'
        required: true
        default: 'all'
      service:
        description: 'Service'
        required: true
        default: 'all'
      build_root_container:
        type: boolean
        description: 'Build root-container'
        default: true
      build_build_container:
        type: boolean
        description: 'Build build-container'
        default: true
      rollback_timescale:
        type: boolean
        description: 'Rollback Timescale DB'
        default: false
      rollback_postgres:
        type: boolean
        description: 'Rollback Postgres DB'
        default: false
      skip_app_rollback:
        type: boolean
        description: 'Skip rollback-app'
        default: false

permissions:
  id-token: write
  contents: read

jobs:
  rollback-app:
    if: ${{ github.event.inputs.skip_app_rollback == 'false' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 10
          lfs: true
          ref: ${{ github.event.inputs.rollbackTo }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.FLU_AWS_GITHUB_OIDC_ROLE }}
          role-duration-seconds: 7200 #seconds
      - name: Build
        id: build
        uses: ./scripts/actions
        with:
          command: |
            flu build-docker \
              --network ${{ github.event.inputs.network }} \
              --group ${{ github.event.inputs.group }} \
              --service ${{ github.event.inputs.service }} \
              --environment ${{ github.event.inputs.environment }} \
              --build-root-container ${{ github.event.inputs.build_root_container }} \
              --build-build-container ${{ github.event.inputs.build_build_container }} \
              --tag $GITHUB_SHA
      - name: Deploy
        id: deploy
        uses: ./scripts/actions
        with:
          command: |
            flu deploy-service \
              --network ${{ github.event.inputs.network }} \
              --group ${{ github.event.inputs.group }} \
              --service ${{ github.event.inputs.service }} \
              --environment ${{ github.event.inputs.environment }} \
              --debug false \
              --tag $GITHUB_SHA
      - name: Discord notif (SUCCESS)
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          details: Deployment succeeded.
          description: "**Event:** [${{ github.event_name }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n**Repository:** ${{ github.event.repository.full_name }}\n**Triggered by:** ${{ github.event.sender.login }}\n**Environment:** ${{ github.event.inputs.environment }}\n**Network:** ${{ github.event.inputs.network }}\n**Group:** ${{ github.event.inputs.group }}\n**Service:** ${{ github.event.inputs.service }}\n**Commit Id:** ${{ github.sha }}\n\n"
          webhookUrl: ${{ secrets.FLU_CI_DISCORD_WEBHOOK_URL }}
      - name: Discord notif (CANCEL)
        if: cancelled()
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: warn
          description: "**Event:** [${{ github.event_name }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n**Repository:** ${{ github.event.repository.full_name }}\n**Triggered by:** ${{ github.event.sender.login }}\n**Environment:** ${{ github.event.inputs.environment }}\n**Network:** ${{ github.event.inputs.network }}\n**Group:** ${{ github.event.inputs.group }}\n**Service:** ${{ github.event.inputs.service }}\n**Commit Id:** ${{ github.sha }}\n\n"
          details: Deployment cancelled.
          webhookUrl: ${{ secrets.FLU_CI_DISCORD_WEBHOOK_URL }}
      - name: Discord notif (FAIL)
        if: failure()
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          description: "**Event:** [${{ github.event_name }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n**Repository:** ${{ github.event.repository.full_name }}\n**Triggered by:** ${{ github.event.sender.login }}\n**Environment:** ${{ github.event.inputs.environment }}\n**Network:** ${{ github.event.inputs.network }}\n**Group:** ${{ github.event.inputs.group }}\n**Service:** ${{ github.event.inputs.service }}\n**Commit Id:** ${{ github.sha }}\n\n"
          details: Deployment failed.
          webhookUrl: ${{ secrets.FLU_CI_DISCORD_WEBHOOK_URL }}

  rollback-db:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.FLU_AWS_GITHUB_OIDC_ROLE }}
          role-duration-seconds: 7200 #seconds
      - name: Rollback Database
        id: db
        uses: ./scripts/actions
        with:
          command: |
            flu rollback-db \
              --network ${{ github.event.inputs.network }} \
              --environment ${{ github.event.inputs.environment }} \
              --rollback-timescaledb ${{ github.event.inputs.rollback_timescale }} \
              --rollback-postgresdb ${{ github.event.inputs.rollback_postgres }} \
              --tag $GITHUB_SHA
