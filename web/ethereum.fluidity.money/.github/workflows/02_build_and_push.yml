# fluidity.money
# This action builds a docker image, tags it with the branch name & latest, then pushes it to an ECR repository
name: "üõ† + üöö Docker Build & Publish"
on:
  # Repository dispatch allows commits to fluidity-money/go-docker to trigger this workflow to run
  # Comment this out if 
     # the repository does not use fluidity/go-docker as a base image 
     # the repository require automatic rebuilds 
  repository_dispatch: 
    types: [go-docker-dispatch]
  # Run on all pushes, on all branches
  push:
    branches:

env:
  SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
  SLACK_ICON: "https://github.com/fluidity-money.png?size=48"
  SLACK_USERNAME: "CodeBot"

jobs:
  publish:
    name: "üõ† + üöö Build + Publish image"
    runs-on: ubuntu-latest
    if: contains(toJson(github.event.commits), '[skip-ci]') == false && contains(toJson(github.event.commits), '[skip ci]') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[ci-skip]') == false
    steps:
      - name: Configure environment
        id: config
        run: |
          VERSION=$(echo $GITHUB_REF | sed -e "s/^refs\/tags\/v//")
          echo ::set-output name=version::$VERSION

      - name: Fetch repository
        uses: actions/checkout@master
        with:
          token: ${{ secrets.PAT }}
          lfs: true
          submodules: true

      - name: generate-github-branch-vars
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: ECR Repository Variables
        id: ecr_repo
        run: |
          REPO_NAME=fluidity/webwallet
          echo "::set-output name=REPO_NAME::$REPO_NAME"

      - name: Slack Notification # https://github.com/bryannice/gitactions-slack-notification/blob/master/deployment/git-actions/template_slack_notification.yml
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_TITLE: "üõ† ${{ github.repository }} is building image ${{ steps.ecr_repo.outputs.REPO_NAME }}"
          SLACK_MESSAGE: "üë∑‚Äç‚ôÇÔ∏è Commit: ${{ github.sha }}/${{ steps.get_version.outputs.VERSION }} on ${{ github.ref }} from ${{ github.repository }}"
          SLACK_COLOR: "#BE90D4"

      - name: Build & Publish 
        id: docker
        uses: fluidity-money/aws-ecr-action@master
        with: # These are injested as arguments in fluidity-money/aws-ecr-action in entrypoint.sh
          access_key_id: ${{ secrets.ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.ACCESS_KEY }}
          account_id: ${{ secrets.ACCOUNT_ID }}
          repo: ${{ steps.ecr_repo.outputs.REPO_NAME }}
          region: ap-southeast-2
          tags: latest,${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          create_repo: true
          image_scanning_configuration: true
          set_repo_policy: false
          prebuild_script: .github/scripts/prebuild.sh
          ecr_image: fluidity/go-docker
          make_docker: true
          #make_docker_command: docker-frontend # replace the 'docker' in make docker with docker-frontend 
          make_env_vars: ""

      - name: Slack Succesful Build Notification
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_TITLE: "‚úÖ ${{ github.repository }}"
          SLACK_MESSAGE: "üòÑ ECR image: ${{steps.ecr_repo.outputs.REPO_NAME}}"
          SLACK_COLOR: "#006442"

  failure:
    name: "‚ùå Slack Build Failure Notification"
    runs-on: ubuntu-latest
    if: ${{ always() && needs.publish.result=='failure' }}
    needs: publish
    steps:
      - name: Slack build failure notification
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_TITLE: "‚ùå ${{ github.repository }} docker build failure"
          SLACK_MESSAGE: "üò≠ ${{ github.repository }} failed to build image"